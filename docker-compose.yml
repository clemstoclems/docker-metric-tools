version: '3.6'
services:
  app:
    build: .
    container_name: application_tools
    volumes:
      - '.:/data/www/'
    restart: always
    ports: ['80:80']
    links:
      - yellow-lab:yellow-lab
      - influxdb:influxdb
    networks: ["monitoring"]
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_TAG}
    container_name: elasticsearch_omnitools
    volumes:
      - 'elastic-storage:/usr/share/elasticsearch/data:rw'
    env_file:
      - env_files/es.env
    ports: ['${ELASTIC_PUBLIC_PORT}:9200']
    networks: ["monitoring"]
  grafana:
    image: grafana/grafana:${GRAFANA_TAG}
    container_name: grafana_omnitools
    ports: ['${GRAFANA_PUBLIC_PORT}:3000']
    links:
      - influxdb:influxdb
    volumes:
      - 'grafana-storage:/var/lib/grafana'
    networks: ["monitoring"]
  influxdb:
    image: influxdb:${INFLUXDB_TAG}
    container_name: influxdb_omnitools
    ports : ['${INFLUXDB_PUBLIC_PORT}:8086']
    volumes:
      - 'influxdb-storage:/var/lib/influxdb'
      - '$PWD/config/influxdb:/var/local/data'
    env_file:
      - env_files/influxdb.env
    networks: ["monitoring"]
  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_TAG}
    container_name: kibana_omnitools
    ports: ['${KIBANA_PUBLIC_PORT}:5601']
    depends_on: ['elasticsearch']
    networks: ["monitoring"]
  portainer:
    image: portainer/portainer:${PORTAINER_TAG}
    container_name: portainer_omnitools
    ports: ['${PORTAINER_PUBLIC_PORT}:9000']
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/opt/portainer/data:/data'
    restart: unless-stopped
    networks: ["monitoring"]
  sonar:
    image: sonarqube:${SONARQUBE_TAG}
    container_name: sonarqube_omnitools
    ports: ['${SONARQUBE_PUBLIC_PORT}:9000']
    networks: ["monitoring"]
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  telegraf:
    image: telegraf:1.12.5-alpine
    container_name: telegraf_omnitools
    ports:
      - '${TELEGRAF_PUBLIC_PORT_UDP}:8092'
      - '${TELEGRAF_PUBLIC_PORT_TCP}:8094'
      - '${TELEGRAF_PUBLIC_PORT_STATSD}:8125'
    volumes:
      - '$PWD/config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:rw'
    networks: ["monitoring"]
    depends_on:
      - 'influxdb'
  yellow-lab:
    image: jguyomard/yellowlabtools:${YELLOW_LABS_TAG}
    container_name: yellowlab_omnitools
    ports: ['${YELLOW_LABS_PUBLIC_PORT}:8383']
    restart: always
    networks: ["monitoring"]
networks:
  monitoring:
    driver: bridge
volumes:
  elastic-storage:
  grafana-storage:
  influxdb-storage:

